@page "/form"

@inject NavigationManager NavManager
@inject Session session

@code {
    public List<string> questions = new List<string>();
    public string msg = "";
    int defaultScore = -5;
    bool invalidSubmit = false;
    QLodgeSecurity qLodgeSecurity = new QLodgeSecurity();
    QPhysicalSecurity qPhysicalSecurity = new QPhysicalSecurity();

    protected override void OnInitialized()
    {
        if (!session.IsLoggedIn())
        {
            NavManager.NavigateTo($"/logout");
            return;
        }

        qLodgeSecurity = session._nikeForm.QLodgeSecurity;
        qPhysicalSecurity = session._nikeForm.QPhysicalSecurity;
    }

    private void Submit()
    {
        if (!qLodgeSecurity.Validate() || !qPhysicalSecurity.Validate())
        {
            invalidSubmit = true;
            StateHasChanged();
            return;
        }

        NavManager.NavigateTo($"report");
    }
}

<div>
    <div class="row">
        <div class="col-1"></div>

        <div class="col-10">
            <div class="row mb-4">

                <h4>Lodge Security</h4>
                <EditForm Model="@qLodgeSecurity.Questions" OnValidSubmit="@Submit">
                    <DataAnnotationsValidator />

                    @foreach (var q in qLodgeSecurity.Questions)
                    {
                        <div class="mb-2">
                            @{
                                var validClass = "form-control";
                                if (invalidSubmit && q.Score == -5) validClass = "form-control invalid";
                            }

                            <InputSelect @bind-Value="q.Score" class="@validClass">
                                @foreach (var a in q.Answers)
                                {
                                    <option value="@a.Value">@a.Name</option>
                                }
                            </InputSelect>

                            <ValidationMessage For="@(() => q.Score)" />

                            
                            <p>@q.Score</p>
                        </div>

                        @if (q.Score == -1)
                        {
                            <div class="row mb-4">
                                <div class="col-3"><button type="button">Upload</button></div>
                                <div class="col-3"><input placeholder="Action" /></div>
                                <div class="col-3"><input placeholder="Responsbile" /></div>
                                <div class="col-3"><input type="date" /></div>
                            </div>
                        }
                    }
                </EditForm>
            </div>

            <div class="row">

                <h4>Physical Security</h4>
                <EditForm Model="@qPhysicalSecurity.Questions" OnValidSubmit="@Submit">
                    <DataAnnotationsValidator />

                    @foreach (var q in qPhysicalSecurity.Questions)
                    {
                        <div class="mb-2">
                            @{
                                var validClass = "form-control";
                                if (invalidSubmit && q.Score == -5) validClass = "form-control invalid";
                            }

                            <InputSelect @bind-Value="q.Score" class="@validClass">
                                @foreach (var a in q.Answers)
                                {
                                    <option value="@a.Value">@a.Name</option>
                                }
                            </InputSelect>

                            <ValidationMessage For="@(() => q.Score)" />


                            <p>@q.Score</p>
                        </div>

                        @if (q.Score == -1)
                        {
                            <div class="row mb-4">
                                <div class="col-3"><button type="button">Upload</button></div>
                                <div class="col-3"><input placeholder="Action" /></div>
                                <div class="col-3"><input placeholder="Responsbile" /></div>
                                <div class="col-3"><input type="date" /></div>
                            </div>
                        }
                    }
                </EditForm>
            </div>
            
            <button type="submit" @onclick=Submit>Submit</button>

            @if (!string.IsNullOrEmpty(msg))
            {
                <p style="color:red">@msg</p>
            }
        </div>

        <div class="col-1"></div>
    </div>
</div>